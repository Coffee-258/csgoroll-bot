module.exports = {
    OPERATIONS: {
        createTrade: "OnCreateTrade",
        joinTrade: "JoinTrades",
        updateWallet: "OnUpdateWallet",
        updateTrade: "OnUpdateTrade",
        processTrade: "ProcessTrade",
        stashUnstash: "StashUnstash",
        cancelTrade: "CancelTrade",
        cancelTrades: "CancelTrades",
        createTrades: "createTrades",
        openBox: "OpenBox",
        createExchange: "CreateExchange",
        changeSteamToken: "changeSteamAccessToken"
    },

    QUERYS: {
        createTrade: "subscription OnCreateTrade($userId: ID) {\n  createTrade(userId: $userId) {\n    trade {\n      ...Trade\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Trade on Trade {\n  id\n  status\n  steamAppName\n  cancelReason\n  canJoinAfter\n  markupPercent\n  createdAt\n  depositor {\n    id\n    steamId\n    avatar\n    displayName\n    steamDisplayName\n    online\n    __typename\n  }\n  depositorLastActiveAt\n  expiresAt\n  withdrawerSteamTradeUrl\n  customValue\n  withdrawer {\n    id\n    steamId\n    avatar\n    displayName\n    steamDisplayName\n    __typename\n  }\n  totalValue\n  updatedAt\n  tradeItems {\n    id\n    marketName\n    value\n    customValue\n    itemVariant {\n      ...ItemVariant\n      __typename\n    }\n    markupPercent\n    stickers {\n      ...SimpleSticker\n      __typename\n    }\n    steamExternalAssetId\n    __typename\n  }\n  trackingType\n  suspectedTraderCanJoinAfter\n  joinedAt\n  avgPaintWear\n  hasStickers\n  __typename\n}\n\nfragment ItemVariant on ItemVariant {\n  id\n  itemId\n  name\n  brand\n  iconUrl\n  value\n  displayValue\n  externalId\n  color\n  rarity\n  __typename\n}\n\nfragment SimpleSticker on TradeItemSticker {\n  value\n  imageUrl\n  brand\n  name\n  color\n  wear\n  __typename\n}\n",
        joinTrade: "mutation JoinTrades($input: JoinTradesInput!) {\n  joinTrades(input: $input) {\n    trades {\n      id\n      status\n      totalValue\n      updatedAt\n      expiresAt\n      withdrawer {\n        id\n        steamId\n        avatar\n        displayName\n        steamDisplayName\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n",
        updateWallet: "subscription OnUpdateWallet {\n  updateWallet {\n    wallet {\n      id\n      amount\n      name\n      __typename\n    }\n    walletChange {\n      id\n      type\n      externalId\n      valueChange\n      __typename\n    }\n    __typename\n  }\n}\n",
        updateTrade: "subscription OnUpdateTrade($status: TradeStatus, $userId: ID) {\n  updateTrade(status: $status, userId: $userId) {\n    trade {\n      ...Trade\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Trade on Trade {\n  id\n  status\n  steamAppName\n  cancelReason\n  canJoinAfter\n  markupPercent\n  createdAt\n  depositor {\n    id\n    steamId\n    avatar\n    displayName\n    steamDisplayName\n    online\n    __typename\n  }\n  depositorLastActiveAt\n  expiresAt\n  withdrawerSteamTradeUrl\n  customValue\n  withdrawer {\n    id\n    steamId\n    avatar\n    displayName\n    steamDisplayName\n    __typename\n  }\n  totalValue\n  updatedAt\n  tradeItems {\n    id\n    marketName\n    value\n    customValue\n    itemVariant {\n      ...ItemVariant\n      __typename\n    }\n    markupPercent\n    stickers {\n      ...SimpleSticker\n      __typename\n    }\n    steamExternalAssetId\n    __typename\n  }\n  trackingType\n  suspectedTraderCanJoinAfter\n  joinedAt\n  avgPaintWear\n  hasStickers\n  __typename\n}\n\nfragment ItemVariant on ItemVariant {\n  id\n  itemId\n  name\n  brand\n  iconUrl\n  value\n  displayValue\n  externalId\n  color\n  rarity\n  depositable\n  __typename\n}\n\nfragment SimpleSticker on TradeItemSticker {\n  value\n  imageUrl\n  brand\n  name\n  color\n  wear\n  __typename\n}\n",
        processTrade: "mutation ProcessTrade($input: ProcessTradeInput!) {\n  processTrade(input: $input) {\n    trade {\n      id\n      status\n      totalValue\n      updatedAt\n      expiresAt\n      withdrawerSteamTradeUrl\n      __typename\n    }\n    __typename\n  }\n}\n",
        stashUnstash: "mutation StashUnstash($input: StashUnstashBalanceInput!) {\n  stashUnstashBalance(input: $input) {\n    amount\n    __typename\n  }\n}\n",
        cancelTrade: "mutation CancelTrade($input: CancelTradeInput!) {\n  cancelTrade(input: $input) {\n    trade {\n      ...TradeCancel\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment TradeCancel on Trade {\n  id\n  cancelReason\n  expiresAt\n  status\n  totalValue\n  __typename\n}\n",
        createTrades: "mutation createTrades($input: CreateTradesInput!) {\n  createTrades(input: $input) {\n    trades {\n      ...Trade\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Trade on Trade {\n  id\n  status\n  steamAppName\n  cancelReason\n  canJoinAfter\n  markupPercent\n  createdAt\n  depositor {\n    id\n    steamId\n    avatar\n    displayName\n    steamDisplayName\n    online\n    __typename\n  }\n  depositorLastActiveAt\n  expiresAt\n  withdrawerSteamTradeUrl\n  customValue\n  withdrawer {\n    id\n    steamId\n    avatar\n    displayName\n    steamDisplayName\n    __typename\n  }\n  totalValue\n  updatedAt\n  tradeItems {\n    id\n    marketName\n    value\n    customValue\n    itemVariant {\n      ...ItemVariant\n      __typename\n    }\n    markupPercent\n    stickers {\n      ...SimpleSticker\n      __typename\n    }\n    steamExternalAssetId\n    __typename\n  }\n  trackingType\n  suspectedTraderCanJoinAfter\n  joinedAt\n  avgPaintWear\n  hasStickers\n  __typename\n}\n\nfragment ItemVariant on ItemVariant {\n  id\n  itemId\n  name\n  brand\n  iconUrl\n  value\n  displayValue\n  externalId\n  color\n  rarity\n  depositable\n  __typename\n}\n\nfragment SimpleSticker on TradeItemSticker {\n  value\n  imageUrl\n  brand\n  name\n  color\n  wear\n  __typename\n}\n",
        openBox: "mutation OpenBox($input: OpenBoxInput!) {\n  openBox(input: $input) {\n    box {\n      id\n      unopenedUserBoxesCount\n      __typename\n    }\n    boxOpenings {\n      ...BoxOpening\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoxOpening on BoxOpening {\n  id\n  boxItemId\n  profit\n  balance\n  currency\n  userItem {\n    ...BoxOpeningUserItem\n    __typename\n  }\n  roll {\n    value\n    __typename\n  }\n  __typename\n}\n\nfragment BoxOpeningUserItem on UserItem {\n  id\n  status\n  userId\n  createdAt\n  consumeValue\n  consumeValueInUserCurrency\n  itemVariant {\n    ...BoxOpeningItemVariant\n    __typename\n  }\n  __typename\n}\n\nfragment BoxOpeningItemVariant on ItemVariant {\n  id\n  name\n  brand\n  withdrawable\n  color\n  rarity\n  value\n  displayValue\n  currency\n  exchangeRate\n  iconUrl\n  itemId\n  size\n  usable\n  __typename\n}\n",
        createExchange: "mutation CreateExchange($input: CreateExchangeInput!) {\n  createExchange(input: $input) {\n    exchange {\n      id\n      itemsValue\n      userItemsValue\n      remainder\n      profit\n      currency\n      newUserItems {\n        edges {\n          node {\n            id\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n",
        changeSteamToken: "mutation changeSteamAccessToken($input: UpdateUserInput!) {  updateUser(input: $input) {    user {      id      steamAccessToken      __typename    }    __typename  }}",
    },
};